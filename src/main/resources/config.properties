# ----------------------------------------------------------------
# BASIC CONFIG
# ----------------------------------------------------------------

# admins, separate with semicolon
# admins also can be specified directly in the database
# --> "user"-table, "is_admin"-column
ADMINS                      = user_1
SHOW_SOLUTIONS_TO_ADMINS    = true

# ----------------------------------------------------------------
# main database info
# ----------------------------------------------------------------

# db with admin-rights
MAIN_DBHOST                 = 127.0.0.1
MAIN_DBPORT                 = 3306
MAIN_DBNAME                 = admin_db
MAIN_DBUSER                 = root
MAIN_DBPASS                 =

# set to true, if you want to automate
# creating scenario-databases
# user-management and drop/create database rights required
ALLOW_DB_CREATION           = true

# ----------------------------------------------------------------
# import main database, if it does not exist
# ----------------------------------------------------------------

IMPORT_DB_IF_EMPTY          = true
# one example scenario will be added with id:1
IMPORT_EXAMPLE_SCENARIO     = true

# -- WARNING -----------------------------------------------------
# set to true if you want to reset the main database
# ALL STUDENT ENTRIES WILL BE DELETED!!!
# CREATE and DROP DATABASE-rights required
# -- WARNING -----------------------------------------------------

FORCE_RESET_DATABASE        = true

# -- if IMPORT_EXAMPLE_SCENARIO is set to 'true' -----------------
# database credentials for the example scenario
# don't use the same properties as for the main database
#
# can be left blank, if ALLOW_DB_CREATION is set to true

EXAMPLE_SCENARIO_DBHOST     =
EXAMPLE_SCENARIO_DBPORT     =
EXAMPLE_SCENARIO_DBNAME     =
EXAMPLE_SCENARIO_DBUSER     =
EXAMPLE_SCENARIO_DBPASS     =

# ----------------------------------------------------------------
# PATHS
# ----------------------------------------------------------------

# path where all scenario-related files are stored
# e.g. sql-import-scripts, diagrams, xml-exports
# READ and WRITE-permissions needed!
# to avoid errors, consider using absolute file path

SCENARIO_RESOURCES          = ~/a/code/sql_java/misc/

# IMPORTANT:
# please extract the archive "resources.zip"
# to your new location specified in SCENARIO_RESOURCES.
#
# The resulting path should look like this:
# {SCENARIO_RESOURCES}/scn/

# ----------------------------------------------------------------

# ----------------------------------------------------------------
# AUTHENTICATION
# ----------------------------------------------------------------

# -- basic login-url ---------------------------------------------
# http://[hostname]/[rootfolder]/wuecampus/
#   [scenario_id]/[user_id]/[secure_value]
#
# e.g.: "http://localhost:8029/sql/wuecampus/1/
#   /user_1/d1ac3b14896c2faf640d1e00966fc065"
# ----------------------------------------------------------------

# wuecampus-authentification-system
USE_WUECAMUS_LOGIN          = false
SECRET_ID_STRING            = thisIsADummySecret

# use fallback-user, if no credentials are given
USE_FALLBACK_USER           = true

# login-parameters if USE_FALLBACK_USER is set to true
FALLBACK_USER               = user_1
FALLBACK_SECUREVALUE        = d1ac3b14896c2faf640d1e00966fc065
FALLBACK_SCENARIO           = 1

# ----------------------------------------------------------------

# session-timeout in seconds
# user will get notified on new ajax-requests
# if session is invalid
SESSION_TIMEOUT             = 1700

# used-browser-log-files (user-agents) are stored in
# "{SCENARIO_RESOURCES}/scn/browser_logs/"
# as a tab-separated csv-file.
# to eliminate duplicate entries group by user-id.
LOG_BROWSER_HISTORY         = true

# ----------------------------------------------------------------
